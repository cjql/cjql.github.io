<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>n-ary-tree-postorder-traversal</title>
      <link href="/n-ary-tree-postorder-traversal/"/>
      <url>/n-ary-tree-postorder-traversal/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>后序遍历 N 叉树<br>n-ary-tree-postorder-traversal <a href="https://leetcode.com/problems/n-ary-tree-postorder-traversal/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p><img src="https://leetcode.com/problems/n-ary-tree-postorder-traversal/Figures/145_transverse.png" alt="二叉树"><br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string"># Definition for a Node.</span></span><br><span class="line"><span class="string">class Node(object):</span></span><br><span class="line"><span class="string">    def __init__(self, val, children):</span></span><br><span class="line"><span class="string">        self.val = val</span></span><br><span class="line"><span class="string">        self.children = children</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">postorder</span><span class="params">(self, root)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type root: Node</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        </span><br><span class="line">        stack, output = [root, ], []</span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            root = stack.pop()</span><br><span class="line">            output.append(root.val)</span><br><span class="line">            stack.extend(root.children)</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">return</span> output[::<span class="number">-1</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> N叉树 </tag>
            
            <tag> 遍历 </tag>
            
            <tag> 后序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>di-string-match</title>
      <link href="/di-string-match/"/>
      <url>/di-string-match/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>用只含字母 I 和 D 的字符串生成列表，使 I 对应的列表元素值升序排列， D对应的列表元素值降序排列<br>di-string-match <a href="https://leetcode.com/problems/di-string-match/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/di-string-match/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.用 0 和 字符串长度来初始化<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">diStringMatch</span><span class="params">(self, S)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type S: str</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        up, down = <span class="number">0</span>, len(S)</span><br><span class="line">        ans=[]</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> S:</span><br><span class="line">            <span class="keyword">if</span> x == <span class="string">'I'</span>:</span><br><span class="line">                ans.append(up)</span><br><span class="line">                up += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                ans.append(down)</span><br><span class="line">                down -= <span class="number">1</span></span><br><span class="line">                </span><br><span class="line">        <span class="keyword">return</span> ans + [up]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>twoSum</title>
      <link href="/twoSum/"/>
      <url>/twoSum/</url>
      
        <content type="html"><![CDATA[<p>integer、indices、input、assume、类的方法传参、enumerate、random(5)<br><a id="more"></a><br>Given an array of <code>integers</code>, return <code>indices</code> of the two numbers such that they add up to a specific target.<br><code>You may assume that each input would have exactly one solution, and you may not use the same element twice.</code></p><h1 id="1-enumerate"><a href="#1-enumerate" class="headerlink" title="1. enumerate"></a>1. enumerate</h1><p><a href="http://www.runoob.com/python/python-func-enumerate.html" target="_blank" rel="noopener">http://www.runoob.com/python/python-func-enumerate.html</a><br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">seq = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>]</span><br><span class="line">seq_enumerated=enumerate(seq) </span><br><span class="line"><span class="comment">#组合为一个索引序列，同时列出数据和数据下标</span></span><br><span class="line">print(seq_enumerated) </span><br><span class="line"><span class="comment">#&lt;enumerate object at 0x0000021026476828&gt; 返回枚举对象</span></span><br><span class="line">print(type(seq_enumerated)) </span><br><span class="line"><span class="comment">#&lt;class 'enumerate'&gt; </span></span><br><span class="line"><span class="comment">#print(seq_enumerated[0])    #TypeError  'enumerate' object is not subscriptable</span></span><br><span class="line"><span class="keyword">for</span> i, element <span class="keyword">in</span> enumerate(seq):</span><br><span class="line">    print(i,element)</span><br></pre></td></tr></table></figure></p><h1 id="2-参考"><a href="#2-参考" class="headerlink" title="2. 参考"></a>2. 参考</h1><h2 id="2-1-O-n2-1"><a href="#2-1-O-n2-1" class="headerlink" title="2.1. O(n2)-1"></a>2.1. O(n<sub>2</sub>)-1</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        d = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i, n <span class="keyword">in</span> enumerate(nums):</span><br><span class="line">            m = target - n</span><br><span class="line">            <span class="keyword">if</span> m <span class="keyword">in</span> d:</span><br><span class="line">                <span class="keyword">return</span> [d[m], i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                d[n] = i</span><br><span class="line">a=Solution()</span><br><span class="line">m=a.twoSum([<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>],<span class="number">9</span>)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h3 id="2-1-1-去掉class"><a href="#2-1-1-去掉class" class="headerlink" title="2.1.1. 去掉class"></a>2.1.1. 去掉class</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(nums, target)</span>:</span></span><br><span class="line">    d = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i, n <span class="keyword">in</span> enumerate(nums):</span><br><span class="line">        m = target - n</span><br><span class="line">        <span class="keyword">if</span> m <span class="keyword">in</span> d:</span><br><span class="line">            <span class="keyword">return</span> [d[m], i]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            d[n] = i</span><br><span class="line">print(twoSum([<span class="number">2</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>],<span class="number">9</span>))</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> len(nums) &lt;= <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        buff_dict = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            <span class="keyword">if</span> nums[i] <span class="keyword">in</span> buff_dict:</span><br><span class="line">                <span class="keyword">return</span> [buff_dict[nums[i]], i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                buff_dict[target - nums[i]] = i</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hamming-distance</title>
      <link href="/hamming-distance/"/>
      <url>/hamming-distance/</url>
      
        <content type="html"><![CDATA[<p>汉明距离：两个整数转化为二进制后，求进制位上数字不同的个数。<br>hamming-distance <a href="https://leetcode.com/problems/hamming-distance/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/hamming-distance/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p><code>bin</code> , <code>^</code> , <code>count</code><br><a id="more"></a></p><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>汉明距离：两个整数转化为二进制后，求进制位上数字不同的个数。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hammingDistance</span><span class="params">(self, x, y)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type x: int</span></span><br><span class="line"><span class="string">        :type y: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> bin(x^y).count(<span class="string">'1'</span>)</span><br></pre></td></tr></table></figure><h2 id="收获-1"><a href="#收获-1" class="headerlink" title="收获"></a>收获</h2><p><code>bin</code> , <code>^</code> , <code>count</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 进制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k-closest-points-to-origin</title>
      <link href="/k-closest-points-to-origin/"/>
      <url>/k-closest-points-to-origin/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>一系列二维坐标值放入列表中，求出K个离原点最近的坐标值。<br>k-closest-points-to-origin <a href="https://leetcode.com/problems/k-closest-points-to-origin/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/k-closest-points-to-origin/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.多维下的sort<br>2.lambda的用法<br>3.列表的切片<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">kClosest</span><span class="params">(self, points, K)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type points: List[List[int]]</span></span><br><span class="line"><span class="string">        :type K: int</span></span><br><span class="line"><span class="string">        :rtype: List[List[int]]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        points.sort(key = <span class="keyword">lambda</span> P:P[<span class="number">0</span>]**<span class="number">2</span> + P[<span class="number">1</span>]**<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> points[:K]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>merge-two-binary-trees</title>
      <link href="/merge-two-binary-trees/"/>
      <url>/merge-two-binary-trees/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>合并2个二叉树。<br>merge-two-binary-trees <a href="https://leetcode.com/problems/merge-two-binary-trees/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/merge-two-binary-trees/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.判断空树<br>2.递归<br>3.<code>TreeNode</code> , <code>self.</code><br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeTrees</span><span class="params">(self, t1, t2)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> t1 <span class="keyword">and</span> t2:</span><br><span class="line">            root = TreeNode(t1.val + t2.val)</span><br><span class="line">            root.left = self.mergeTrees(t1.left, t2.left)</span><br><span class="line">            root.right = self.mergeTrees(t1.right, t2.right)</span><br><span class="line">            <span class="keyword">return</span> root</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> t1 <span class="keyword">or</span> t2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 二叉树 </tag>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>number-of-recent-calls</title>
      <link href="/number-of-recent-calls/"/>
      <url>/number-of-recent-calls/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>求3000ms前到现在的ping数。<br>number-of-recent-calls <a href="https://leetcode.com/problems/number-of-recent-calls/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/number-of-recent-calls/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.用list来理解collections.deque()<br>2.<a href="https://docs.python.org/3/library/collections.html" target="_blank" rel="noopener">https://docs.python.org/3/library/collections.html</a><br>3.<a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001411031239400f7181f65f33a4623bc42276a605debf6000" target="_blank" rel="noopener">廖雪峰collections</a><br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RecentCounter</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.q = collections.deque()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ping</span><span class="params">(self, t)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type t: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.q.append(t)</span><br><span class="line">        <span class="keyword">while</span> self.q[<span class="number">0</span>] &lt; t<span class="number">-3000</span>:</span><br><span class="line">            self.q.popleft()</span><br><span class="line">        <span class="keyword">return</span> len(self.q)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Your RecentCounter object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"># obj = RecentCounter()</span></span><br><span class="line"><span class="comment"># param_1 = obj.ping(t)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> collections </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fibonacci-number</title>
      <link href="/fibonacci-number/"/>
      <url>/fibonacci-number/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>求斐波那契的第 N+1 个值。<br>fibonacci-number <a href="https://leetcode.com/problems/fibonacci-number/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/fibonacci-number/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.负数下标更方便从右处理列表<br>2.注意体会边界的使用<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(self, N)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type N: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> N == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> N == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fibs = [<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>,N + <span class="number">1</span>):</span><br><span class="line">                fibs.append(fibs[<span class="number">-1</span>] + fibs[<span class="number">-2</span>])</span><br><span class="line">            <span class="keyword">return</span> fibs[<span class="number">-1</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>search-in-a-binary-search-tree</title>
      <link href="/search-in-a-binary-search-tree/"/>
      <url>/search-in-a-binary-search-tree/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>在BST中找到节点值等于给定值的节点。<br>search-in-a-binary-search-tree <a href="https://leetcode.com/problems/search-in-a-binary-search-tree/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/search-in-a-binary-search-tree/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.<code>while</code>递归中的<code>return</code><br>2.<code>temp = temp.left</code>的用法</p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>1.BST中父节点和子节点的值的大小关系是固定的吗<br>2.搜索不到则返回<code>NULL</code>是如何呈现的<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">searchBST</span><span class="params">(self, root, val)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type root: TreeNode</span></span><br><span class="line"><span class="string">        :type val: int</span></span><br><span class="line"><span class="string">        :rtype: TreeNode</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        temp = root</span><br><span class="line">        <span class="keyword">while</span> temp:</span><br><span class="line">            <span class="keyword">if</span> temp.val == val:</span><br><span class="line">                <span class="keyword">return</span> temp</span><br><span class="line">            <span class="keyword">elif</span> temp.val &gt; val:</span><br><span class="line">                temp = temp.left</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                temp = temp.right</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
          <category> 二叉树 </category>
          
          <category> 搜索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 二叉树 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>n-ary-tree-preorder-traversal</title>
      <link href="/n-ary-tree-preorder-traversal/"/>
      <url>/n-ary-tree-preorder-traversal/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>前序遍历 N 叉树<br>n-ary-tree-preorder-traversal <a href="https://leetcode.com/problems/n-ary-tree-preorder-traversal/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>list <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" target="_blank" rel="noopener">官方文档</a> <a href="http://www.runoob.com/python/python-lists.html" target="_blank" rel="noopener">菜鸟教程</a><br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string"># Definition for a Node.</span></span><br><span class="line"><span class="string">class Node(object):</span></span><br><span class="line"><span class="string">    def __init__(self, val, children):</span></span><br><span class="line"><span class="string">        self.val = val</span></span><br><span class="line"><span class="string">        self.children = children</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">preorder</span><span class="params">(self, root)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type root: Node</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        </span><br><span class="line">        stack, output = [root, ], []            </span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            root = stack.pop()</span><br><span class="line">            output.append(root.val)</span><br><span class="line">            stack.extend(root.children[::<span class="number">-1</span>])</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> N叉树 </tag>
            
            <tag> 前序 </tag>
            
            <tag> 遍历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>peak-index-in-a-mountain-array</title>
      <link href="/peak-index-in-a-mountain-array/"/>
      <url>/peak-index-in-a-mountain-array/</url>
      
        <content type="html"><![CDATA[<p>简述：求山形数组中峰值的下标。<br>peak-index-in-a-mountain-array <a href="https://leetcode.com/problems/peak-index-in-a-mountain-array/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/peak-index-in-a-mountain-array/" target="_blank" rel="noopener">中文</a><br>收获：遍历一下返回就OK。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">peakIndexInMountainArray</span><span class="params">(self, A)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type A: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(A)):</span><br><span class="line">            <span class="keyword">if</span> A[i] &gt; A[i+<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>array-partition-i</title>
      <link href="/array-partition-i/"/>
      <url>/array-partition-i/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>把 2n 个整数平分成 n 份，求每份中最小数之和的最大数。<br>array-partition-i <a href="https://leetcode.com/problems/array-partition-i/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/array-partition-i/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.<code>sorted</code>的用法<br>2.步距的妙用<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arrayPairSum</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> sum(sorted(nums)[::<span class="number">2</span>])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sort-array-by-parity-ii</title>
      <link href="/sort-array-by-parity-ii/"/>
      <url>/sort-array-by-parity-ii/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>给定非负整数数组，该数组中奇数的个数和偶数的个数相同。重新排列数组，使元素的奇偶性和元素的索引的奇偶性一致。<br>sort-array-by-parity-ii <a href="https://leetcode.com/problems/sort-array-by-parity-ii/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/sort-array-by-parity-ii/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.初始化一个固定长度的数组<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParityII</span><span class="params">(self, A)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type A: List[int]</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        lst = [<span class="keyword">None</span>] * len(A)</span><br><span class="line">        evenIndex,oddIndex = <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> A:</span><br><span class="line">            <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                lst[evenIndex] = x</span><br><span class="line">                evenIndex += <span class="number">2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                lst[oddIndex] = x</span><br><span class="line">                oddIndex += <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> lst</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>self-dividing-numbers</title>
      <link href="/self-dividing-numbers/"/>
      <url>/self-dividing-numbers/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>求两个整数之间能被自身所有十进制位上的数字整除的数。<br>self-dividing-numbers <a href="https://leetcode.com/problems/self-dividing-numbers/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/self-dividing-numbers/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.先单个判断，再进行范围遍历。<br>2.<code>str</code>和<code>int</code>的妙用。<br>3.好好体会<code>return</code>的位置和用法。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">selfDividingNumbers</span><span class="params">(self, left, right)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">self_dividing</span><span class="params">(n)</span>:</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> str(n):</span><br><span class="line">                <span class="keyword">if</span> d == <span class="string">'0'</span> <span class="keyword">or</span> n % int(d) &gt; <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">        ans = []</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(left, right + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> self_dividing(n):</span><br><span class="line">                ans.append(n)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>univalued-binary-tree</title>
      <link href="/univalued-binary-tree/"/>
      <url>/univalued-binary-tree/</url>
      
        <content type="html"><![CDATA[<p>判断二叉树是否是单值二叉树。<br>univalued-binary-tree <a href="https://leetcode.com/problems/univalued-binary-tree/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/univalued-binary-tree/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>1.层层推进的判断，调用自身<br>2.唯一性用集合长度来表示<br>3.<code>node.val</code> , <code>node.left</code> , <code>node.right</code><br><a id="more"></a></p><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>判断二叉树是否是单值二叉树</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isUnivalTree</span><span class="params">(self, root)</span>:</span></span><br><span class="line">        vals = []</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">dfs</span><span class="params">(node)</span>:</span></span><br><span class="line">            <span class="keyword">if</span> node:</span><br><span class="line">                vals.append(node.val)</span><br><span class="line">                dfs(node.left)</span><br><span class="line">                dfs(node.right)</span><br><span class="line"></span><br><span class="line">        dfs(root)</span><br><span class="line">        <span class="keyword">return</span> len(set(vals)) == <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 二叉树 </tag>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>swap-salary</title>
      <link href="/swap-salary/"/>
      <url>/swap-salary/</url>
      
        <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>数据库中属性（如男女）互换。<br>swap-salary <a href="https://leetcode.com/problems/swap-salary/" target="_blank" rel="noopener">英文</a> <a href="https://leetcode-cn.com/problems/swap-salary/" target="_blank" rel="noopener">中文</a></p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>SQL语句，记一下好了。<br>UPDATE SET CASE END WHEN THEN ELSE<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> salary </span><br><span class="line"><span class="keyword">SET</span></span><br><span class="line">    sex = <span class="keyword">CASE</span> sex</span><br><span class="line">        <span class="keyword">WHEN</span> <span class="string">'m'</span> <span class="keyword">THEN</span> <span class="string">'f'</span></span><br><span class="line">        <span class="keyword">ELSE</span> <span class="string">'m'</span></span><br><span class="line">    <span class="keyword">END</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows环境下用Flask开发微信公众号</title>
      <link href="/windows%E4%B8%8B%E7%94%A8Flask%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
      <url>/windows%E4%B8%8B%E7%94%A8Flask%E5%BC%80%E5%8F%91%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>微信公众号是不错的图床。也可以做做微信机器人。无需穿透工具。<br>目前此项目依托Flask，接入了文本复读机和给图片提供图床的功能。<br>后面会加入批量图片OCR功能。<br><a id="more"></a></p><h2 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h2><p>一台服务器、一个已开通的公众号。<br>服务器Python环境下的第三方库：Flask、xmltodict。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>配置服务器的安全组，打开80端口。</li><li>关闭服务器防火墙。</li><li>将下面的代码保存为wechat.py放在服务器上。</li></ul><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, escape, url_for, request, make_response</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> xmltodict</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/weixin/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wechat</span><span class="params">()</span>:</span></span><br><span class="line">    </span><br><span class="line">    args = request.args</span><br><span class="line">    signature = args.get(<span class="string">'signature'</span>)</span><br><span class="line">    timestamp = args.get(<span class="string">'timestamp'</span>)</span><br><span class="line">    nonce = args.get(<span class="string">'nonce'</span>)</span><br><span class="line">    echostr = args.get(<span class="string">'echostr'</span>)</span><br><span class="line">    token = <span class="string">'2019cj'</span> <span class="comment"># 你的token，可自行设置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字典排序</span></span><br><span class="line">    temp = [token, timestamp, nonce]</span><br><span class="line">    temp.sort()</span><br><span class="line">    <span class="comment"># 字符串拼接并进行sha1加密</span></span><br><span class="line">    temp = <span class="string">""</span>.join(temp)</span><br><span class="line">    sig = hashlib.sha1(temp.encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 开发者获得加密后的字符串可与signature对比，标识该请求来源于微信</span></span><br><span class="line">    <span class="keyword">if</span> sig == signature:</span><br><span class="line">        <span class="comment"># 根据请求方式.返回不同的内容 </span></span><br><span class="line">        <span class="comment"># 如果是get方式,代表是验证服务器有效性</span></span><br><span class="line">        <span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">            <span class="keyword">return</span> echostr</span><br><span class="line">         <span class="comment"># 如果POST方式,代表是微服务器转发给我们的消息</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            resp_data = request.data</span><br><span class="line">            resp_dict = xmltodict.parse(resp_data).get(<span class="string">'xml'</span>)</span><br><span class="line">            ToUserName = resp_dict.get(<span class="string">'ToUserName'</span>)</span><br><span class="line">            FromUserName =resp_dict.get(<span class="string">'FromUserName'</span>)</span><br><span class="line">            MsgType = resp_dict.get(<span class="string">'MsgType'</span>)</span><br><span class="line">            CreateTime = int(time.time())</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> MsgType == <span class="string">'text'</span>:</span><br><span class="line">                content = resp_dict.get(<span class="string">'Content'</span>)</span><br><span class="line">            <span class="keyword">elif</span> resp_dict.get(<span class="string">'MsgType'</span>)==<span class="string">'image'</span>:</span><br><span class="line">                content = resp_dict.get(<span class="string">'PicUrl'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                content = <span class="string">''</span></span><br><span class="line">            response = &#123;</span><br><span class="line">                    <span class="string">"ToUserName"</span>: FromUserName,</span><br><span class="line">                    <span class="string">"FromUserName"</span>: ToUserName,</span><br><span class="line">                    <span class="string">"CreateTime"</span>: CreateTime,</span><br><span class="line">                    <span class="string">"MsgType"</span>: <span class="string">"text"</span>,</span><br><span class="line">                    <span class="string">"Content"</span>: content,</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span> response:</span><br><span class="line">                response = &#123;<span class="string">"xml"</span>: response&#125;</span><br><span class="line">                response = xmltodict.unparse(response)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                response = <span class="string">''</span></span><br><span class="line">            <span class="keyword">return</span> make_response(response)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'errno'</span>, <span class="number">403</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(404)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span><span class="params">(e)</span>:</span></span><br><span class="line">    <span class="comment"># note that we set the 404 status explicitly</span></span><br><span class="line">    <span class="keyword">return</span>(<span class="string">'404 Error'</span>) </span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span>(<span class="string">'Hello!&lt;br&gt;A world as simple as possible.'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">80</span>,debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><ul><li>打开服务器的shell，路径移动到wechat.py所在的最小子文件夹，输入’python wechat.py’</li><li>登录 <a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener">https://mp.weixin.qq.com/</a> 。点击左下角开发选项下的<code>基本配置</code> 。</li><li>点击下图中的<code>查看</code>，将服务器IP加入其中 。<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/RpaIDoV1UhZUlJHSk0thxgM2tLenia3M4QrotumGhTuvibFHfRoakGicEheXAia4r7AEcDH2rNXrBG1ib5YsfdZ0nMA/0" alt=""></li><li>点服务器配置的<code>修改配置</code>，提交成功后点<code>启用</code>最终页面效果如下：<br><img src="http://mmbiz.qpic.cn/mmbiz_jpg/RpaIDoV1UhZUlJHSk0thxgM2tLenia3M4uZDVKHm8icSchDwyguL5kT1mQ6fzpDxhGSzdQnwiaTXzI2ot9NnpZndQ/0" alt=""></li></ul><h2 id="消息解析"><a href="#消息解析" class="headerlink" title="消息解析"></a>消息解析</h2><p><a href="https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Receiving_standard_messages.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Receiving_standard_messages.html</a></p><p>不同类型的消息结构对比：</p><table><thead><tr><th>参数</th><th>文本</th><th>图片</th><th>语音</th><th>视频</th><th>短视频</th></tr></thead><tbody><tr><td>ToUserName</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>FromUserName</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>CreateTime</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>MsgType</td><td>text</td><td>image</td><td>voice</td><td>video</td><td>shortvideo</td></tr><tr><td>Content</td><td>√</td><td>×</td><td>×</td><td>×</td><td>×</td></tr><tr><td>MsgId</td><td>√</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>PicUrl</td><td>×</td><td>√</td><td>×</td><td>×</td><td>×</td></tr><tr><td>MediaId</td><td>×</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Format</td><td>×</td><td>×</td><td>√</td><td>×</td><td>×</td></tr><tr><td>Recognition</td><td>×</td><td>×</td><td>√</td><td>×</td><td>×</td></tr><tr><td>ThumbMediaId</td><td>×</td><td>×</td><td>×</td><td>√</td><td>√</td></tr></tbody></table><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="https://www.jianshu.com/p/29c692811322" target="_blank" rel="noopener">https://www.jianshu.com/p/29c692811322</a></li><li><a href="https://www.cnblogs.com/crazymagic/p/9741459.html" target="_blank" rel="noopener">https://www.cnblogs.com/crazymagic/p/9741459.html</a></li><li><a href="https://zhuanlan.zhihu.com/p/50801694" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/50801694</a><h2 id="错误及修正"><a href="#错误及修正" class="headerlink" title="错误及修正"></a>错误及修正</h2>Unicode-objects must be encoded before hashing⇒hashlib.sha1(temp.encode(‘utf-8’)).hexdigest()</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Flask </tag>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小作品：列表批量生成文章</title>
      <link href="/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%88%97%E8%A1%A8%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0/"/>
      <url>/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%88%97%E8%A1%A8%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>分类下的元素也想快速做成文章呢，对笔记很有好处的。<br>每一处改动都赋给新变量、路径注意事项、正则分割与字符串分隔、f.write和f.writeline都需要另外写换行<br>小作品：<a href="http://localhost:8888/notebooks/post/genPostFromList.ipynb" target="_blank" rel="noopener">localhost</a> <a href="https://nbviewer.jupyter.org/github/cjql/myjupyter/blob/master/post/genPostFromList.ipynb" target="_blank" rel="noopener">nbviewer</a> <a href="https://github.com/cjql/myjupyter/blob/master/post/genPostFromList.ipynb" target="_blank" rel="noopener">github</a><br><a id="more"></a></p><h1 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h1><h2 id="每一处改动都赋给新变量"><a href="#每一处改动都赋给新变量" class="headerlink" title="每一处改动都赋给新变量"></a>每一处改动都赋给新变量</h2><h2 id="路径注意事项"><a href="#路径注意事项" class="headerlink" title="路径注意事项"></a>路径注意事项</h2><h2 id="正则分割与字符串分隔"><a href="#正则分割与字符串分隔" class="headerlink" title="正则分割与字符串分隔"></a>正则分割与字符串分隔</h2><h2 id="f-write和f-writeline都需要另外写换行"><a href="#f-write和f-writeline都需要另外写换行" class="headerlink" title="f.write和f.writeline都需要另外写换行"></a>f.write和f.writeline都需要另外写换行</h2><h1 id="点评"><a href="#点评" class="headerlink" title="点评"></a>点评</h1><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><h1 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h1><h2 id="输入是什么"><a href="#输入是什么" class="headerlink" title="输入是什么"></a>输入是什么</h2><h2 id="给定常量是什么"><a href="#给定常量是什么" class="headerlink" title="给定常量是什么"></a>给定常量是什么</h2><h2 id="输出是什么"><a href="#输出是什么" class="headerlink" title="输出是什么"></a>输出是什么</h2><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">titleMind=<span class="string">'基本数据类型'</span></span><br><span class="line">titleChildren=<span class="string">'整数、浮点数、字符、字符串、布尔变量、枚举、具名常量、数组、自定义变量'</span></span><br><span class="line">dire=<span class="string">'D:\\blog\\source\\_posts\\'</span></span><br><span class="line">head=<span class="string">'''---</span></span><br><span class="line"><span class="string">title: TITLE</span></span><br><span class="line"><span class="string">tags: TAGS</span></span><br><span class="line"><span class="string">---'''</span></span><br><span class="line">tagsChild=<span class="string">'[&#123;&#125;,raw]'</span>.format(titleMind)</span><br><span class="line">tagsMind=<span class="string">'[mind,&#123;&#125;]'</span>.format(titleMind)</span><br><span class="line">headChild=head.replace(<span class="string">'TAGS'</span>,tagsChild)</span><br><span class="line">headMind=head.replace(<span class="string">'TAGS'</span>,tagsMind)</span><br><span class="line">titles=re.split(<span class="string">'[，\n、]'</span>,titleChildren)</span><br><span class="line"><span class="keyword">for</span> title <span class="keyword">in</span> titles:</span><br><span class="line">    title=<span class="string">'&#123;&#125;'</span>：<span class="string">'&#123;&#125;'</span>.formant(titleMind,title)</span><br><span class="line">    headnew=headChild.replace(<span class="string">'TITLE'</span>,title)  </span><br><span class="line">    fn=<span class="string">'&#123;&#125;&#123;&#125;.md'</span>.format(dire,title)</span><br><span class="line">    <span class="keyword">with</span> open(fn,<span class="string">'a+'</span>,encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(headnew)</span><br><span class="line">        f.write(<span class="string">'\n整理完后记得清掉raw标签哦'</span>)</span><br><span class="line">        f.write(<span class="string">'\n&lt;!-- more --&gt;'</span>) </span><br><span class="line">fnMind=<span class="string">'&#123;&#125;&#123;&#125;.md'</span>.format(dire,titleMind )</span><br><span class="line"><span class="keyword">with</span> open(fnMind,<span class="string">'a+'</span>,encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    headMind=headMind.replace(<span class="string">'TITLE'</span>,titleMind)  </span><br><span class="line">    f.write(headMind)</span><br><span class="line">    f.write(<span class="string">'\n'</span>)</span><br><span class="line">    f.write(<span class="string">'&#123;&#125;一览'</span>.format(titleMind))</span><br><span class="line">    f.write(<span class="string">'\n&lt;!-- more --&gt;'</span>)</span><br><span class="line">    <span class="keyword">for</span> title <span class="keyword">in</span> titles:</span><br><span class="line">        f.write(<span class="string">'[&#123;&#125;](/&#123;&#125;：&#123;&#125;)\n'</span>.format(title,titleMind,title))</span><br><span class="line">print(<span class="string">'ok'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 小作品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ireadweek</title>
      <link href="/ireadweek/"/>
      <url>/ireadweek/</url>
      
        <content type="html"><![CDATA[<p>自己造的小轮子。<br><a id="more"></a></p><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><p>多页汇总分页批量获取书名作者和网盘链接<br>输入：网址<br>输出：书名、作者、链接  </p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h1 id="遇到的问题及解决方案"><a href="#遇到的问题及解决方案" class="headerlink" title="遇到的问题及解决方案"></a>遇到的问题及解决方案</h1><table><thead><tr><th>问题描述</th><th>解决方案</th></tr></thead><tbody><tr><td>批量书合成一页还是每本书单独有序号</td><td>很多个人网站每个条目有自己的序号，按序号抓可不重不漏</td></tr><tr><td>正则表达式的引号问题</td><td>转义</td></tr><tr><td>网页可能不存在</td><td>try、except</td></tr><tr><td>匹配结果为0的情况</td><td>try、except</td></tr><tr><td>编译器vscode跑太慢</td><td>换回python自带IDLE，快很多</td></tr><tr><td>为啥跑着跑着就停了</td><td></td></tr></tbody></table><h1 id="待改进的地方"><a href="#待改进的地方" class="headerlink" title="待改进的地方"></a>待改进的地方</h1><h1 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h1><p>一级风险：原网站换<br>五级风险：原作者取消网盘链接</p>]]></content>
      
      
      
        <tags>
            
            <tag> 小作品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小作品：小作品快速生成</title>
      <link href="/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%B0%8F%E4%BD%9C%E5%93%81%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90/"/>
      <url>/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%B0%8F%E4%BD%9C%E5%93%81%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<p>一键生产小作品。逐步分析，各个击破。<br>换行简要处理、标题替换、摘要、要点、路径、more、要点标题、模板<br>小作品：<a href="http://localhost:8888/notebooks/post/stubAchieve.ipynb" target="_blank" rel="noopener">localhost</a> <a href="https://nbviewer.jupyter.org/github/cjql/myjupyter/blob/master/post/stubAchieve.ipynb" target="_blank" rel="noopener">nbviewer</a> <a href="https://github.com/cjql/myjupyter/blob/master/post/stubAchieve.ipynb" target="_blank" rel="noopener">github</a><br><a id="more"></a></p><h1 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h1><h2 id="换行简要处理"><a href="#换行简要处理" class="headerlink" title="换行简要处理"></a>换行简要处理</h2><h2 id="标题替换"><a href="#标题替换" class="headerlink" title="标题替换"></a>标题替换</h2><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h2 id="要点-1"><a href="#要点-1" class="headerlink" title="要点"></a>要点</h2><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><h2 id="more"><a href="#more" class="headerlink" title="more"></a>more</h2><h2 id="要点标题"><a href="#要点标题" class="headerlink" title="要点标题"></a>要点标题</h2><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><h1 id="点评"><a href="#点评" class="headerlink" title="点评"></a>点评</h1><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><h1 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h1><h2 id="输入是什么"><a href="#输入是什么" class="headerlink" title="输入是什么"></a>输入是什么</h2><h2 id="给定常量是什么"><a href="#给定常量是什么" class="headerlink" title="给定常量是什么"></a>给定常量是什么</h2><h2 id="输出是什么"><a href="#输出是什么" class="headerlink" title="输出是什么"></a>输出是什么</h2><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所有输入</span></span><br><span class="line">title=<span class="string">'列表批量生成文章'</span> <span class="comment">#文章标题</span></span><br><span class="line">abstract=<span class="string">'分类下的元素也想快速做成文章呢，对笔记很有好处的。'</span> <span class="comment">#文章摘要，描述作品是做什么的</span></span><br><span class="line">gist=<span class="string">'每一处改动都赋给新变量、路径注意事项、正则分割与字符串分隔、f.write和f.writeline都需要另外写换行'</span>   <span class="comment">#文章要点，用于生产子标题和快速回顾，注意用顿号分隔</span></span><br><span class="line">url=<span class="string">'post/genPostFromList.ipynb'</span> <span class="comment">#从‘notebooks/’后面截取</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#给定常量</span></span><br><span class="line">dire=<span class="string">'D:\\blog\\source\\_posts\\'</span></span><br><span class="line"></span><br><span class="line">head=<span class="string">'''---</span></span><br><span class="line"><span class="string">title: 小作品：TITLE</span></span><br><span class="line"><span class="string">tags: [小作品]</span></span><br><span class="line"><span class="string">---'''</span></span><br><span class="line"></span><br><span class="line">template=<span class="string">'''# 点评</span></span><br><span class="line"><span class="string"># 需求分析</span></span><br><span class="line"><span class="string"># 清单</span></span><br><span class="line"><span class="string">## 输入是什么</span></span><br><span class="line"><span class="string">## 给定常量是什么</span></span><br><span class="line"><span class="string">## 输出是什么</span></span><br><span class="line"><span class="string"># 问题</span></span><br><span class="line"><span class="string"># 源码</span></span><br><span class="line"><span class="string">```py</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">```'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#————————————head标题替换</span></span><br><span class="line">head=head.replace(<span class="string">'TITLE'</span>,title)</span><br><span class="line"><span class="comment">#————————————摘要无需处理</span></span><br><span class="line"><span class="comment">#————————————要点无需处理</span></span><br><span class="line"><span class="comment">#————————————路径处理。代码的链接</span></span><br><span class="line"><span class="comment"># https://nbviewer.jupyter.org/github/cjql/myjupyter/blob/master/MySQL.ipynb</span></span><br><span class="line"><span class="comment"># http://localhost:8888/notebooks/MySQL.ipynb</span></span><br><span class="line">urlLocal=<span class="string">'http://localhost:8888/notebooks/'</span>+url</span><br><span class="line">urlNbviewer=<span class="string">'https://nbviewer.jupyter.org/github/cjql/myjupyter/blob/master/'</span>+url</span><br><span class="line">urlGithub=<span class="string">'https://github.com/cjql/myjupyter/blob/master/'</span>+url</span><br><span class="line">url=<span class="string">'小作品：[本地路径](&#123;&#125;) [nbviewer](&#123;&#125;) [GitHub](&#123;&#125;)'</span>.format(urlLocal,urlNbviewer,urlGithub)</span><br><span class="line"><span class="comment">#————————————生成标题</span></span><br><span class="line">gists=<span class="string">'# 要点\n## '</span>+gist</span><br><span class="line">gists=gists.replace(<span class="string">'、'</span>,<span class="string">'\n## '</span>)</span><br><span class="line"><span class="comment">#————————————后续模板无需处理</span></span><br><span class="line"><span class="comment">#————————————将依次要输出的内容赋给列表，方便打印</span></span><br><span class="line">contents=[head,abstract,gist,url,<span class="string">'&lt;!-- more --&gt;'</span>,gists,template]</span><br><span class="line"><span class="comment">#————————————文件名拼接，注意后缀</span></span><br><span class="line">fn=<span class="string">'&#123;&#125;小作品：&#123;&#125;.md'</span>.format(dire,title)</span><br><span class="line"><span class="comment">#————————————写入文件</span></span><br><span class="line"><span class="keyword">with</span> open(fn,<span class="string">'w'</span>,encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> content <span class="keyword">in</span> contents:</span><br><span class="line">        f.write(content)</span><br><span class="line">        f.write(<span class="string">'\n'</span>)</span><br><span class="line">print(<span class="string">'ok'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 小作品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小作品：快速生成普通文章</title>
      <link href="/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90%E6%99%AE%E9%80%9A%E6%96%87%E7%AB%A0/"/>
      <url>/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90%E6%99%AE%E9%80%9A%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>一键生成小文章啦，不用重复去键入代码或者复制粘贴标题啦。</p><p>小作品：<a href="http://localhost:8888/notebooks/post/genPost.ipynb" target="_blank" rel="noopener">localhost</a> <a href="https://nbviewer.jupyter.org/github/cjql/myjupyter/blob/master/post/genPost.ipynb" target="_blank" rel="noopener">nbviewer</a> <a href="https://github.com/cjql/myjupyter/blob/master/post/genPost.ipynb" target="_blank" rel="noopener">github</a><br><a id="more"></a></p><h1 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h1><p>## </p><h1 id="点评"><a href="#点评" class="headerlink" title="点评"></a>点评</h1><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><h1 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h1><h2 id="输入是什么"><a href="#输入是什么" class="headerlink" title="输入是什么"></a>输入是什么</h2><h2 id="给定常量是什么"><a href="#给定常量是什么" class="headerlink" title="给定常量是什么"></a>给定常量是什么</h2><h2 id="输出是什么"><a href="#输出是什么" class="headerlink" title="输出是什么"></a>输出是什么</h2><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 小作品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小作品：快速生成LeetCode模板</title>
      <link href="/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90LeetCode%E6%A8%A1%E6%9D%BF/"/>
      <url>/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90LeetCode%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>想提高刷题效率，重复工作留给计算机吧</p><p>小作品：<a href="http://localhost:8888/notebooks/post/genLeetCode.ipynb" target="_blank" rel="noopener">localhost</a> <a href="https://nbviewer.jupyter.org/github/cjql/myjupyter/blob/master/post/genLeetCode.ipynb" target="_blank" rel="noopener">nbviewer</a> <a href="https://github.com/cjql/myjupyter/blob/master/post/genLeetCode.ipynb" target="_blank" rel="noopener">github</a><br><a id="more"></a></p><h1 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h1><p>## </p><h1 id="点评"><a href="#点评" class="headerlink" title="点评"></a>点评</h1><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><h1 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h1><h2 id="输入是什么"><a href="#输入是什么" class="headerlink" title="输入是什么"></a>输入是什么</h2><h2 id="给定常量是什么"><a href="#给定常量是什么" class="headerlink" title="给定常量是什么"></a>给定常量是什么</h2><h2 id="输出是什么"><a href="#输出是什么" class="headerlink" title="输出是什么"></a>输出是什么</h2><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">title = <span class="string">'univalued-binary-tree'</span></span><br><span class="line">tags = <span class="string">'[leetcode]'</span></span><br><span class="line">abstract = title</span><br><span class="line">dire = <span class="string">'D:\\blog\\source\\_posts\\'</span></span><br><span class="line">head = <span class="string">'''---</span></span><br><span class="line"><span class="string">title: TITLE</span></span><br><span class="line"><span class="string">tags: TAGS</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">TITLE [英文](https://leetcode.com/problems/TITLE/) [中文](https://leetcode-cn.com/problems/TITLE/)</span></span><br><span class="line"><span class="string">&lt;!-- more --&gt;</span></span><br><span class="line"><span class="string">## 简述</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 代码</span></span><br><span class="line"><span class="string">```py</span></span><br></pre></td></tr></table></figure><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>‘’’<br>head = head.replace(‘TITLE’,title)<br>head = head.replace(‘TAGS’,tags)<br>fn = dire + title + ‘.md’<br>with open(fn,’a+’,encoding=’utf8’) as f:<br>    f.write(head)<br>print(‘ok’)<br><code>`</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> 小作品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小作品：快速整理标签</title>
      <link href="/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%95%B4%E7%90%86%E6%A0%87%E7%AD%BE/"/>
      <url>/%E5%B0%8F%E4%BD%9C%E5%93%81%EF%BC%9A%E5%BF%AB%E9%80%9F%E6%95%B4%E7%90%86%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<p>hexo的标签和分类都不是自己理想的知识整理类型，写个python程序自动整理标签。<br>os.listdir(dire)、re.split(‘[\n ]’,tagsave)、 list(set(tagsOld).difference(set(tagsNew)))、正则子匹配项处理<br>小作品：<a href="http://localhost:8888/notebooks/post/tags.ipynb" target="_blank" rel="noopener">localhost</a> <a href="https://nbviewer.jupyter.org/github/cjql/myjupyter/blob/master/post/tags.ipynb" target="_blank" rel="noopener">nbviewer</a> <a href="https://github.com/cjql/myjupyter/blob/master/post/tags.ipynb" target="_blank" rel="noopener">github</a><br><a id="more"></a></p><h1 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h1><h2 id="os-listdir-dire"><a href="#os-listdir-dire" class="headerlink" title="os.listdir(dire)"></a>os.listdir(dire)</h2><h2 id="re-split-‘-n-’-tagsave"><a href="#re-split-‘-n-’-tagsave" class="headerlink" title="re.split(‘[\n ]’,tagsave)"></a>re.split(‘[\n ]’,tagsave)</h2><h2 id="list-set-tagsOld-difference-set-tagsNew"><a href="#list-set-tagsOld-difference-set-tagsNew" class="headerlink" title="list(set(tagsOld).difference(set(tagsNew)))"></a>list(set(tagsOld).difference(set(tagsNew)))</h2><h2 id="正则子匹配项处理"><a href="#正则子匹配项处理" class="headerlink" title="正则子匹配项处理"></a>正则子匹配项处理</h2><h1 id="点评"><a href="#点评" class="headerlink" title="点评"></a>点评</h1><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><h1 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h1><h2 id="输入是什么"><a href="#输入是什么" class="headerlink" title="输入是什么"></a>输入是什么</h2><h2 id="给定常量是什么"><a href="#给定常量是什么" class="headerlink" title="给定常量是什么"></a>给定常量是什么</h2><h2 id="输出是什么"><a href="#输出是什么" class="headerlink" title="输出是什么"></a>输出是什么</h2><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##自动更新标签分类</span></span><br><span class="line"><span class="comment">## (.*?)([ \n])</span></span><br><span class="line"><span class="comment">## [$1](/tags/$1)$2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># 获取新的标签列表</span></span><br><span class="line">dire=<span class="string">'D:\\blog\\public\\tags\\'</span></span><br><span class="line">tagsNew=os.listdir(dire)</span><br><span class="line">print(<span class="string">'新标签共有:'</span>,len(tagsNew))</span><br><span class="line"><span class="comment"># print(tagsNew)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取旧的标签列表</span></span><br><span class="line">tagsave=<span class="string">'''空闲扩展 思考</span></span><br><span class="line"><span class="string">achieve todo raw</span></span><br><span class="line"><span class="string">学习笔记 后续学习</span></span><br><span class="line"><span class="string">mind fix</span></span><br><span class="line"><span class="string">核对表</span></span><br><span class="line"><span class="string">数据结构 基本数据类型</span></span><br><span class="line"><span class="string">mysql</span></span><br><span class="line"><span class="string">ML NLP NLTK 文本分析</span></span><br><span class="line"><span class="string">编程基础</span></span><br><span class="line"><span class="string">python python基础 jupyter GUI 爬虫</span></span><br><span class="line"><span class="string">code</span></span><br><span class="line"><span class="string">book web menu github 转载</span></span><br><span class="line"><span class="string">wiki one</span></span><br><span class="line"><span class="string">packtpub</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">tagsOld=re.split(<span class="string">'[\n 、]'</span>,tagsave)</span><br><span class="line">print(<span class="string">'\n整理过的标签共有:'</span>,len(tagsOld))</span><br><span class="line"><span class="comment"># print(tagsOld)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#新旧标签对比</span></span><br><span class="line">old_new=list(set(tagsOld).difference(set(tagsNew)))</span><br><span class="line">print(<span class="string">'\n旧标签有而新标签没有：'</span>,len(old_new))</span><br><span class="line">print(old_new)</span><br><span class="line">new_old=list(set(tagsNew).difference(set(tagsOld)))</span><br><span class="line">print(<span class="string">'\n新标签有而旧标签没有：'</span>,len(new_old))</span><br><span class="line">print(new_old)</span><br><span class="line">refinds=re.findall(<span class="string">'(.*?)([ \n])'</span>,tagsave)</span><br><span class="line"><span class="keyword">for</span> refind <span class="keyword">in</span> refinds:</span><br><span class="line">    tagsave=tagsave.replace(refind[<span class="number">0</span>]+refind[<span class="number">1</span>],<span class="string">'[&#123;&#125;](/tags/&#123;&#125;)&#123;&#125;'</span>.format(refind[<span class="number">0</span>],refind[<span class="number">0</span>],refind[<span class="number">1</span>]))</span><br><span class="line">print(tagsave)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 小作品 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
